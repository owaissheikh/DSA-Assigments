1. Write a function to calculate length of the string
#include<stdio.h>
int main()
{
    char st[200]="owaish";
    printf("%d",calstr(st));
   
}

int calstr(char ch[])
{
    int i;
    int len=0;
    for( i=0; ch[i]; i++)
    {
        if(i<ch[i])
        len++;
    }
    return len;
}

2. Write a function to reverse a string.
#include<stdio.h>
int main()
{
    char st[200]="owaish";
    calstr(st);
   
}

void calstr(char ch[])
{
    int i;
    int len=0;
    for( i=strlen(ch); i>=0 ; i--)
    {
        printf("%c",ch[i]);
    }
}
3. Write a function to compare two strings.
#include<stdio.h>
int main()
{
    char st[200]="owaish";
    char st1[200]="owaish";
 compare(st,st1);
   
}

void compare(char ch[],char ch1[])
{
    int i=0;
    while(ch[i]==ch1[i]&& ch[i])
    i++;
    if(ch[i]>ch1[i])
    printf("string 1 is greater than string 2");
    else if(ch[i]<ch1[i])
    printf("string 1 is less than string 2");
    else
    printf("String 1 is equal to string 2");
}

4. Write a function to transform string into uppercase
#include<stdio.h>
int main()
{
    char st[200]="owaish";
    upper(st);
   
}

void upper(char str[])
{
    int i;
    for(i=0; str[i]; i++)
    {
        if(str[i]>='a' && str[i]<='z')
        {
            str[i] = str[i]-32;
        }
    }

    printf("%s convert to the upper case ",str);
}
5. Write a function to transform a string into lowercase
#include<stdio.h>
int main()
{
    char st[200]="OWAISH";
    lower(st);
   
}

void lower(char str[])
{
    int i;
    for(i=0; str[i]; i++)
    {
        if(str[i]>='A' && str[i]<='Z')
        {
            str[i] = str[i]+32;
        }
    }

    printf("%s convert to the upper case ",str);
}
6. Write a function to check whether a given string is an alphanumeric string or not.
(Alphanumeric string must contain at least one alphabet and one digit)
#include<stdio.h>
int main()
{
    char st[200]="owaish1";
    alphanum(st);
   
}

void alphanum(char str[])
{
    int i;
    int A=0;
    int D=0;
    for(i=0; str[i]; i++)
     {
        if(str[i]>='a' && str[i]<='z')
             A=1;
            if(str[i]>='1' && str[i]<='9')
            D=1;
        }
        if(A==1||D==1)
        printf("String is alphanumeric ");
        else
        printf("String is not alphanumeric");
    
    }
7. Write a function to check whether a given string is palindrome or not.
#include<stdio.h>
int main()
{
    char st[200];
    printf("Enter the words : ");
    gets(st);
    wordcount(st);
   
}

void wordcount(char str[])
{
    int i;
    int j;
    int c=0;
    int len = strlen(str);
   for(i=0; i<len ; i++)
   {
    if(str[i]!=str[len-i-1])
    {
    c=1;
    break;
    }
    
   }
   if(c==0)
   printf("palindrone");
   else
   printf("not pali");
  
}

8. Write a function to count words in a given string 
#include<stdio.h>
int main()
{
    char st[200];
    printf("Enter the words : ");
    gets(st);
    wordcount(st);
   
}

void wordcount(char str[])
{
    int i;
    int c=0;
   for(i=0; str[i]; i++)
   {
        if(str[i]==' ')
        c++;
   }
   printf("number of words in the string is  %d : ",c+1);
}
9. Write a function to reverse a string word wise. (For example if the given string is
“Mysirg Education Services” then the resulting string should be “Services Education
Mysirg” )
10. Write a function to find the repeated character in a given string.
#include<stdio.h>
int main()
{
    char st[200];
    printf("Enter the words : ");
    gets(st);
    repeatedchar(st);
   
}

void repeatedchar(char str[])
{
    int i;
    int j;
    int c=0;
    int len = strlen(str);
   for(i=0; i<len ; i++)
   {
    if(str[i]==str[len-i-1])
    {
    c++;
    break;
    }
    
   }
   printf("repeated character is %c:",str[i]);
  
  
}