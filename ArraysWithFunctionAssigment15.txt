1. Write a function to find the greatest number from the given array of any size. (TSRS)
#include<stdio.h>

int main()
{
    int i;
    int a[5];
    printf("Enter the value of array \n");
    for(i=0; i<5; i++)
    {
        scanf("%d",&a[i]);
    }
    printf("gratest element is %d",gratest(a));
}
int gratest(int a[])
{
    int i,j,temp=0;

    for(i=0;i<5; i++)
    {
        for(j=i+1; j<5; j++)
        {
            if(a[i]>a[j])
            {
                temp = a[i];
                a[i] = a[j];
                a[j] = temp;
            }
        }
    }
    return a[j-1];
}

2. Write a function to find the smallest number from the given array of any size. (TSRS)
#include<stdio.h>

int main()
{
    int i;
    int a[5];
    printf("Enter the value of array \n");
    for(i=0; i<5; i++)
    {
        scanf("%d",&a[i]);
    }
    printf("smallest element is %d",gratest(a));
}
int gratest(int a[])
{
    int i,j,temp=0;

    for(i=0;i<5; i++)
    {
        for(j=i+1; j<5; j++)
        {
            if(a[i]<a[j])
            {
                temp = a[i];
                a[i] = a[j];
                a[j] = temp;
            }
        }
    }
    return a[j-1];
}

3. Write a function to sort an array of any size. (TSRS)
#include<stdio.h>

int main()
{

    int i,j,n;
   int temp =0;
   printf("enter the ARRAY size \n");
   scanf("%d",&n);
   int a[n];
  for(i=0; i<n; i++)
    {
         scanf("%d",&a[i]);
    }
    printf("sorted aray is \n");
    Sort(a,n);

}

int Sort(int a[],int n)
{
    int i,j;
   int temp =0;
    for(i=0; i<n; i++)
    {
        for(j=i+1; j<5; j++)
        {
            if(a[j]<a[i])
            {
                temp = a[j];
            a[j] = a[i];
            a[i] = temp;
            }

        }

    }
    for(i=0; i<n; i++)
    {
         printf("%d ",a[i]);
    }
}

4. Write a function to rotate an array by n position in d direction. The d is an indicative
value for left or right. (For example, if array of size 5 is [32, 29, 40, 12, 70]; n is 2 and
d is left, then the resulting array after left rotation 2 times is [40, 12, 70, 32, 29] )

doubt


5. Write a function to find the first occurrence of adjacent duplicate values in the array.
Function has to return the value of the element.
doubt





6. Write a function in C to read n number of values in an array and display it in reverse
order.
#include<stdio.h>

int main()
{

    int i,j,n;
   int temp =0;
   printf("enter the ARRAY size \n");
   scanf("%d",&n);
   int a[n];
  for(i=0; i<n; i++)
    {
         scanf("%d",&a[i]);
    }
    printf("sorted aray is \n");
    reveArray(a,n);

}

void reveArray(int a[],int n)
{
    int i;
    for(i=n-1; i>=0; i--){
        printf("%d ",a[i]);
    }
}

7. Write a function in C to count a total number of duplicate elements in an array.
#include<stdio.h>
int duplicantcount(int a[],int n);

int main()
{

    int i,j,n;
   int temp =0;
   printf("enter the ARRAY size \n");
   scanf("%d",&n);
   int a[n];
  for(i=0; i<n; i++)
    {
         scanf("%d",&a[i]);
    }
    printf("duplicate aray is %d \n",duplicantcount(a,n));
    duplicantcount(a,n);

}

int duplicantcount(int a[],int n)
{
    int i,j;
    int temp=0;
    for(i=0; i<n; i++)	
    {
        for(j=i+1; j<n; j++)
        {
            if(a[i]==a[j])
            {
                temp++;
            }
        }
    }
    return temp;
}

8. Write a function in C to print all unique elements in an array.
int main()
{

    int i,j,n;
   int temp =0;
   printf("enter the ARRAY size \n");
   scanf("%d",&n);
   int a[n];
  for(i=0; i<n; i++)
    {
         scanf("%d",&a[i]);
    }

    uniqueEle(a,n);

}

int uniqueEle(int array[], int n){
   int i,j;
   int count = 1;
   for(i = 0; i < n; i++){
      for(j = 0; j < n; j++)
        {
         if(array[i] == array[j] && i != j)
         break;
         }
      if(j == n ){
         printf("\nunique elements in an array is  : %d \n",array[i]);
      }
   }
}

9. Write a function in C to merge two arrays of the same size sorted in descending
order.

#include<stdio.h>
int main()
{
  int a[3],b[2],c[5],i,j=0;
  printf("Enter the element of array1\n");
    for(i=0; i<3; i++)
    {
        scanf("%d",&a[i]);
    }
 printf("Enter the element of array2\n");
    for(i=0; i<2; i++)
    {
        scanf("%d",&b[i]);
    }
    mergeArray(a,b,c);
}


void mergeArray(int a[],int b[],int c[])
{
    int i,j=0;
    for(i=0; i<3; i++)
    {
        c[j] = a[i];
        j++;
    }

    for(i=0; i<2; i++)
    {
        c[j] = b[i];
        j++;
    }
    for(i=0; i<5; i++)
    {
        printf("%d ",c[i]);
    }
    printf("\n sorting of this array in decreasing order ......\n");
    Sort(c);
    printf("\n");
}


int Sort(int a[])
{
    int i,j;
   int temp =0;
    for(i=0; i<5; i++)
    {
        for(j=i+1; j<5; j++)
        {
            if(a[j]>a[i])
            {
                temp = a[j];
            a[j] = a[i];
            a[i] = temp;
            }

        }

    }
    for(i=0; i<5; i++)
    {
         printf("%d ",a[i]);
    }
}


10. Write a function in C to count the frequency of each element of an array.
#include<stdio.h>
#include<string.h>
int main()
{
    char str[200];
    printf("Enter the string :");
    gets(str);
    for(char ch = 'a'; ch<='z'; ch++)
    {   
        int c=0;
        for(int i=0; i<strlen(str); i++)
        {
               if(ch==str[i])
               c++;
        }
        if(c>0)
        printf("%c occures %d times\n ",ch,c);

    }
}